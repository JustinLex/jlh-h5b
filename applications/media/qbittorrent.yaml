apiVersion: apps/v1
kind: Deployment
metadata:
  name: qbittorrent
spec:
  selector:
    matchLabels:
      app: qbittorrent
  template:
    metadata:
      labels:
        app: qbittorrent
    spec:
      initContainers:
      - name: sysctl-setter
        image: alpine
        securityContext:
          privileged: true
        command:
          - /bin/sh
          - -c
          - |
            sysctl -w net.ipv4.conf.all.src_valid_mark=1
            modprobe wireguard
        volumeMounts:
          - mountPath: /lib/modules
            name: host-modules
      containers:
      - name: qbittorrent
        image: cr.hotio.dev/hotio/qbittorrent:release-4.5.4
        imagePullPolicy: IfNotPresent
        env:
          - name: VPN_ENABLED
            value: "true"
          - name: VPN_LAN_NETWORK
            value: "10.0.0.0/10"
          - name: VPN_CONF
            value: wg0
          - name: PRIVOXY_ENABLED
            value: "false"
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8118
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: [ "NET_ADMIN" ]
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
        volumeMounts:
        - mountPath: /app/qBittorrent/downloads
          name: downloads
        - mountPath: /config
          name: config
        - mountPath: /etc/cont-init.d/02-setup-wg
          name: setup-wg
          subPath: 02-setup-wg  # https://stackoverflow.com/a/39479928
        - mountPath: /config/wireguard
          name: wg-config
      restartPolicy: Always
#      securityContext:
#        sysctls:
#          - name: net.ipv4.conf.all.src_valid_mark
#            value: "1"
#          - name: net.ipv6.conf.all.disable_ipv6
#            value: "0"
      volumes:
      - name: downloads
        persistentVolumeClaim:
          claimName: downloads
      - name: config
        persistentVolumeClaim:
          claimName: qbittorrent-config
      - name: setup-wg
        configMap:
          name: qb-setup-wg
          defaultMode: 0777
      - name: wg-config
        secret:
          secretName: mullvad-wg-config
      - name: host-modules
        hostPath:
          path: /lib/modules
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: qbittorrent
  name: qbittorrent
spec:
  ports:
  - name: web
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: qbittorrent
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/auth-url: "https://oauth.jlh.name/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://oauth.jlh.name/oauth2/start?rd=https://$host$escaped_request_uri"
  name: qbittorrent
spec:
  tls:
    - hosts:
        - qbittorrent.jlh.name
      secretName: qbittorrent-jlh-name-tls
  rules:
    - host: qbittorrent.jlh.name
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: qbittorrent
                port:
                  number: 8080
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: qbittorrent-jlh-name
spec:
  secretName: qbittorrent-jlh-name-tls
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
  dnsNames:
    - qbittorrent.jlh.name
