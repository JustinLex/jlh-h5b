apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sabnzbd
spec:
  selector:
    matchLabels:
      app: sabnzbd
  serviceName: sabnzbd
  replicas: 1
  template:
    metadata:
      labels:
        app: sabnzbd
    spec:
      containers:
        - name: sabnzbd
          image: cr.hotio.dev/hotio/sabnzbd:testing-4.0.3
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /downloads
              name: downloads
            - mountPath: /movies
              name: media
      #        readinessProbe:
      #          httpGet:
      #            path: /api/v1/status
      #            port: http
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: sabnzbd-config
        - name: downloads
          persistentVolumeClaim:
            claimName: downloads
        - name: media
          persistentVolumeClaim:
            claimName: media
      dnsConfig: # Fix DNS resolution in Alpine 3.11 https://github.com/kubernetes/kubernetes/issues/64924 https://github.com/gliderlabs/docker-alpine/issues/539
        options:
          - name: ndots
            value: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: sabnzbd
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    app: sabnzbd
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sabnzbd-config
spec:
  storageClassName: nfs-freenas
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 1Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/auth-url: "https://oauth.jlh.name/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://oauth.jlh.name/oauth2/start?rd=https://$host$escaped_request_uri"
  name: sabnzbd
spec:
  tls:
    - hosts:
        - sabnzbd.jlh.name
      secretName: sabnzbd-jlh-name-tls
  rules:
    - host: sabnzbd.jlh.name
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sabnzbd
                port:
                  number: 80
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: sabnzbd-jlh-name
spec:
  secretName: sabnzbd-jlh-name-tls
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
  dnsNames:
    - sabnzbd.jlh.name
