apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prowlarr
spec:
  selector:
    matchLabels:
      app: prowlarr
  serviceName: prowlarr
  replicas: 1
  template:
    metadata:
      labels:
        app: prowlarr
    spec:
      containers:
      - name: radarr
        image: linuxserver/prowlarr:1.4.1
        env:
        - name: TZ
          value: "europe/stockholm"
        ports:
        - containerPort: 9696
          name: http
        volumeMounts:
        - mountPath: /config
          name: config
#        readinessProbe:
#          httpGet:
#            path: /api/v1/status
#            port: http
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: prowlarr-config
      dnsConfig: # Fix DNS resolution in Alpine 3.11 https://github.com/kubernetes/kubernetes/issues/64924 https://github.com/gliderlabs/docker-alpine/issues/539
        options:
          - name: ndots
            value: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: prowlarr
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app: prowlarr
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prowlarr-config
spec:
  storageClassName: nfs-freenas
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 1Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/auth-url: "https://oauth.jlh.name/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://oauth.jlh.name/oauth2/start?rd=https://$host$escaped_request_uri"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      auth_request_set $name_upstream_1 $upstream_cookie_name_1;
      
      access_by_lua_block {
        if ngx.var.name_upstream_1 ~= "" then
          ngx.header["Set-Cookie"] = "name_1=" .. ngx.var.name_upstream_1 .. ngx.var.auth_cookie:match("(; .*)")
        end
      }
  name: prowlarr
spec:
  tls:
    - hosts:
        - prowlarr.jlh.name
      secretName: prowlarr-jlh-name-tls
  rules:
    - host: prowlarr.jlh.name
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: prowlarr
                port:
                  number: 80
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: prowlarr-jlh-name
spec:
  secretName: prowlarr-jlh-name-tls
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
  dnsNames:
    - prowlarr.jlh.name